/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_anyblox_ffi_AnyBloxNative */

#ifndef _Included_org_anyblox_ffi_AnyBloxNative
#define _Included_org_anyblox_ffi_AnyBloxNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_init
  (JNIEnv *, jclass);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    createRuntime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_anyblox_ffi_AnyBloxNative_createRuntime
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    createConfigBuilder
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_anyblox_ffi_AnyBloxNative_createConfigBuilder
  (JNIEnv *, jclass);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    dropConfigBuilder
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_dropConfigBuilder
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    configBuilderSetWasmCacheLimit
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_configBuilderSetWasmCacheLimit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    configBuilderSetMemoryCacheVirtualMemoryLimit
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_configBuilderSetMemoryCacheVirtualMemoryLimit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    configBuilderSetLogLevel
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_configBuilderSetLogLevel
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    configBuilderSetLogDirectory
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_configBuilderSetLogDirectory
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    configBuilderCompileWithDebug
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_configBuilderCompileWithDebug
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    configBuilderFinish
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_anyblox_ffi_AnyBloxNative_configBuilderFinish
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    dropConfig
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_dropConfig
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    dropRuntime
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_dropRuntime
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    runtimeDecodeInit
 * Signature: (JJZ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_anyblox_ffi_AnyBloxNative_runtimeDecodeInit
  (JNIEnv *, jclass, jlong, jlong, jboolean);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    runtimeDecodeInitWithProjection
 * Signature: (JJJZ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_anyblox_ffi_AnyBloxNative_runtimeDecodeInitWithProjection
  (JNIEnv *, jclass, jlong, jlong, jlong, jboolean);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    jobRunAndBlock
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_anyblox_ffi_AnyBloxNative_jobRunAndBlock
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    dropJob
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_dropJob
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    bundleOpenSelfContained
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_org_anyblox_ffi_AnyBloxNative_bundleOpenSelfContained
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    bundleOpenExtensionAndData
 * Signature: (IJIJ)J
 */
JNIEXPORT jlong JNICALL Java_org_anyblox_ffi_AnyBloxNative_bundleOpenExtensionAndData
  (JNIEnv *, jclass, jint, jlong, jint, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    bundleDecoder
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_anyblox_ffi_AnyBloxNative_bundleDecoder
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    bundleMetadataData
 * Signature: (J)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_anyblox_ffi_AnyBloxNative_bundleMetadataData
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    bundleMetadataDecoder
 * Signature: (J)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_anyblox_ffi_AnyBloxNative_bundleMetadataDecoder
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    bundleMetadataSchema
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_anyblox_ffi_AnyBloxNative_bundleMetadataSchema
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_anyblox_ffi_AnyBloxNative
 * Method:    dropBundle
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_anyblox_ffi_AnyBloxNative_dropBundle
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
